{"name":"Bootstrap-sass-grunt-setup-uxd","tagline":"Bootstrap sass grunt setup","body":"#Front-end Sass Grunt Setup Bootstrap Framework (Windows OS)\r\n##Initial Setup\r\n\r\n[***Install Nodejs***](https://nodejs.org/en/download/)\r\n\r\nDownload Node v4.2.2 LTS Windows Installer (.msi) select windows bit version 32-bit/64-bit\r\n\r\n[***Install Git***](https://git-scm.com/downloads)\r\n\r\nDownload Latest version and install Git.\r\n\r\n**Add Path Setup**\r\n\r\n1. click **Start** button\r\n2. right click **Computer** select **Properties**\r\n3. click **Advanced system settings**\r\n4. in **Advanced** Tab click **Environment Variables**\r\n5. in System Variables find and click **Path** then click Edit **button**\r\n6. inside **Variable** value add at the end of Path _**;C:\\Program Files\\nodejs;C:\\Users\\User Name\\AppData\\Roaming\\npm;**_  click OK button.\r\n7. **Done Good Job!!**\r\n\r\n**Open Command Prompt or Git Bash**\r\n\r\ntype `npm install -g bower` component to use bootstrap-sass.\r\n\r\ntype  `npm install -g grunt-cli` for Grunt.js installation\r\n\r\n## Project Setup\r\n\r\nInside the command prompt or Git Bash, navigate to your project folder directory:\r\n\r\n`cd C:\\Users\\Me\\MyProject`\r\n\r\nand type the following commands:\r\n\r\n`bower init`\r\n\r\n*After this command you are required to enter information / details regarding the project. Feel free to fill it up or not.*\r\n\r\n`bower install bootstrap-sass --save`\r\n\r\n_this commands are used to initialise bower inside your project folder (which in this case is **MyProject**) also to include bootstrap sass on the project._\r\n\r\n`npm init`\r\n\r\n_After this command you are required to enter information / details regarding the project. Feel free to fill it up or not.\r\n_\r\n\r\nNext, we create the necessary folders for our development.\r\n\r\n* `mkdir js`\r\n* `mkdir css`\r\n* `mkdir scripts`\r\n* `mkdir scss`\r\n\r\nor Create the following folders inside **MyProject.**\r\n\r\n* js\r\n* scss\r\n* scripts\r\n* scss\r\n\r\n## Grunt Setup\r\n\r\nNext, we need to install grunt and all the required modules / plugins that we need.\r\n\r\n`npm install grunt`\r\nsetup for package.json devDependencies grunt file.\\n\r\n\r\n\r\n`npm install matchdep --save-dev`\r\n\r\nUse globule to filter npm module dependencies by name.\r\n\r\n\r\n`npm install grunt-contrib-copy --save-dev`\r\n\r\nUse for copying  files and folders\r\n\r\n\r\n`npm install grunt-contrib-uglify --save-dev`\r\n\r\nUse for minify files with UglifyJS.\r\n\r\n\r\n`npm install grunt-contrib-watch --save-dev`\r\n\r\nUse for running predefined tasks whenever watched file patterns are added, changed or deleted.\r\n\r\n\r\n`npm install grunt-open --save-dev`\r\n\r\nUse for opening urls and files from a grunt task.\r\n\r\n\r\n`npm install grunt-express --save-dev`\r\n\r\nUse for starting (and supervise) an Express.js web server using grunt.js.\r\n\r\n\r\n`npm install grunt-parallel --save-dev`\r\n\r\nUse for running tasks or commands in child processes.\r\n\r\n\r\n`npm install grunt-rev --save-dev`\r\n\r\nUse for Static file asset revisioning through content hashing.\r\n\r\n\r\n`npm install grunt-sass --save-dev`\r\n\r\nUse for compiling Sass to CSS using node-sass.\r\n\r\n\r\nCreate Grunt file (**Gruntfile.js**) with this code: \r\n\r\n**// Start**\r\n\r\n    module.exports = function(grunt){\r\n        // Load Grunt tasks declared in the package.json file\r\n        require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\r\n\r\n        grunt.initConfig({\r\n            rev : {\r\n                options : {\r\n                    encoding : 'utf8',\r\n                    algorithm : 'md5',\r\n                    length : 5\r\n                },\r\n                assets : {\r\n                    files : [{\r\n                        src : [\r\n                            'js/*.js',\r\n                            'css/*.css'\r\n                        ]\r\n                    }]\r\n                }\r\n            },\r\n            // copy files\r\n            copy: {\r\n                main: {\r\n                    files: [\r\n                        // Vendor scripts.\r\n                        {\r\n                            expand: true,\r\n                            cwd: 'bower_components/bootstrap-sass/assets/javascripts/',\r\n                            src: ['**/*.js'],\r\n                            dest: 'scripts/bootstrap-sass/'\r\n                        },\r\n                        {\r\n                            expand: true,\r\n                            cwd: 'bower_components/jquery/dist/',\r\n                            src: ['**/*.js', '**/*.map'],\r\n                            dest: 'scripts/jquery/'\r\n                        },\r\n\r\n                        // Fonts.\r\n                        {\r\n                            expand: true,\r\n                            filter: 'isFile',\r\n                            flatten: true,\r\n                            cwd: 'bower_components/',\r\n                            src: ['bootstrap-sass/assets/fonts/**'],\r\n                            dest: 'fonts/'\r\n                        },\r\n\r\n                        // Stylesheets\r\n                        {\r\n                            expand: true,\r\n                            cwd: 'bower_components/bootstrap-sass/assets/stylesheets/',\r\n                            src: ['**/*.scss'],\r\n                            dest: 'scss/'\r\n                        }\r\n                    ]\r\n                },\r\n            },\r\n\r\n            // SASS compilation\r\n            // Compile SASS files into minified CSS.\r\n            sass: {\r\n                options: {\r\n                    includePaths: ['bower_components/bootstrap-sass/assets/stylesheets']\r\n                },\r\n                dist: {\r\n                    options: {\r\n                        outputStyle: 'compressed'\r\n                    },\r\n                    files: {\r\n                        'css/app.css': 'scss/app.scss'\r\n                    }\r\n                }\r\n            },\r\n\r\n            // uglify\r\n            uglify : {\r\n                options : {\r\n                    mangle : false\r\n                },\r\n                my_target : {\r\n                    files : {'js/app.js' : ['scripts/*.js'] }\r\n                }\r\n            },\r\n\r\n            // The webserver\r\n            express : {\r\n                all : {\r\n                    options :{\r\n    // Set your file directory \r\n                        bases : ['C:\\\\Users\\\\Me\\\\MyProject'],\r\n                        port : 9000,\r\n                        hostname : \"0.0.0.0\",\r\n                        livereload : true\r\n                    }\r\n                }\r\n            },\r\n\r\n            watch : {\r\n                all : {\r\n                    files : ['Gruntfile.js','scripts/*.js', 'index.html'],\r\n                    tasks : ['uglify'],\r\n                    options : {\r\n                        livereload : true\r\n                    }\r\n                },\r\n                css : {\r\n                    files : ['scss/*.scss','scss/**/*.scss','scss/**/**/*.scss'],\r\n                    tasks : ['sass']\r\n                }\r\n            },\r\n\r\n            open : {\r\n                all : {\r\n                    path : 'http://localhost:9000/index.html'\r\n                }\r\n            }\r\n        });\r\n\r\n    grunt.loadNpmTasks('grunt-sass');\r\n    grunt.loadNpmTasks('grunt-express');\r\n    grunt.loadNpmTasks('grunt-contrib-watch');\r\n    grunt.loadNpmTasks('grunt-contrib-copy');\r\n    grunt.loadNpmTasks('grunt-contrib-uglify');\r\n    grunt.loadNpmTasks('grunt-rev');\r\n\r\n        // Establish tasks we can run from the terminal.\r\n    grunt.registerTask('build', ['sass', 'copy', 'uglify', 'express', 'open']);\r\n        grunt.registerTask('default', ['build', 'watch']);\r\n    };\r\n\r\n**// End**\r\n\r\nThen, create **app.scss** file inside our **scss** folder:\r\n\r\ninput this to **app.scss**\r\n\r\n_app.scss structure_\r\n\r\n\r\n    @import \"_bootstrap.scss\";\r\n\r\n    /** Uncomment to Active **/\r\n    //*Base Folder*//\r\n    //@import \"base/mixins\";\r\n    //@import \"base/typography\";\r\n    //@import \"base/variables\";\r\n    //@import \"base/button\";\r\n    //@import \"base/helpers\";\r\n    //End Closing\r\n\r\n    //*Layout Folder*//\r\n    //@import \"layout/header\";\r\n    //@import \"layout/main-content\";\r\n    //@import \"layout/sidebar\";\r\n    //@import \"layout/navigation\";\r\n    //@import \"layout/footer\";\r\n    //@import \"layout/pages/home\";\r\n    //@import \"layout/pages/about-us\";\r\n    //@import \"layout/pages/contact-us\";\r\n    //End Closing\r\n\r\n    //*Modules Folder*//\r\n    //@import  \"modules/sub-navigation\";\r\n    //@import  \"modules/thumbnail\";\r\n    //@import  \"modules/panel\";\r\n    //@import  \"modules/modal\";\r\n    //@import  \"modules/breadcrumbs\";\r\n    //@import  \"modules/forms\";\r\n    //End Closing\r\n\r\n\r\n_Uncomment scss file if will be use and create scss files (ex: _mixins.scss) or add new scss file for other function._\r\n\r\nInside scss folder create folder structure for scss component:\r\n\r\n* base\r\n* layout\r\n* modules\r\n\r\nIn **base** folder, your scss are for text hierarchy, color palette/themes,  mixins functions and custom style button ready to use in website/web-app.\r\n\r\nIn **layout** folder, your scss are for layout/theme/page structure.\r\n\r\nIn **modules** folder, your scss are for custom modules and special functions inside your layout, examples are (breadcrumbs, modal, panel, table, thumbnail, forms and etc..).\r\n\r\n\r\n**Be organized in scss file folder structure.**\r\n\r\nThen, we create a sample javascript file inside our **scripts** folder:\r\n\r\n_*Add this is sample js code:_\r\n\r\n`$( document ).ready(function() {});`\r\n\r\nand save this file as **custom.js**\r\n\r\nNext, we create an **index.html** file for our Project and save:\r\n\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <title>Sample for live reload yeah</title>\r\n      <link rel=\"stylesheet\" href=\"css/app.css\" />\r\n\r\n    </head>\r\n\r\n    <body>\r\n      <h1 class=\"title\">hello there</h1>\r\n      <div class=\"content\">\r\n        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially </p>\r\n      </div>\r\n      <script src=\"js/app.js\"></script>\r\n    </body>\r\n\r\n    </html>\r\n\r\nAnd lastly, we run this command:\r\n\r\n`grunt`\r\n\r\n**You are successfully run sass! Good job!!!**","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}